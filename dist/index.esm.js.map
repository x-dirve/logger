{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { copy, extend, isString, date, isArray, labelReplace, isUndefined, isObject, isBoolean } from \"@x-drive/utils\";\n\n/**已存在的全局 Logger 实例 */\nconst LoggerSubjects = new Map<string, Logger>();\n\ninterface ILoggerStyles {\n    gray: string;\n    bule: string;\n    bold: string;\n    lighter: string;\n    orange: string;\n    green:string;\n    [name:string]: string;\n}\n\ninterface ILoggerConfig {\n    /**显示样式 */\n    style: ILoggerStyles;\n\n    /**业务类型 */\n    app:string;\n\n    /**头信息排列顺序 */\n    headSequence: Array<keyof ILoggerHeadInfoTypes>;\n\n    /**是否显示时间 */\n    showDate:boolean;\n\n    /**显示模版 */\n    tpls: Partial<ILoggerHeadInfoTpls>;\n\n    /**时间显示格式 */\n    dateFormat: string;\n\n    debug?:boolean;\n}\n\n/**Group 标题设置 */\ninterface IGroupTitleConfig {\n    /**Group 标题 */\n    text:string;\n\n    /**是否折叠 */\n    collapsed:true | false;\n}\n\n/**日志基础头信息样式 */\ntype ILoggerHeadInfoTypes = {\n    /**日志业务样式 */\n    app: string | string[];\n\n    /**日志模块样式 */\n    module: string | string[];\n\n    /**日志操作样式 */\n    action: string | string[];\n\n    /**日志日期样式 */\n    date: string | string[];\n}\n\ntype ILoggerHeadInfoTpls = {\n    /**日志业务模版 */\n    app: string;\n\n    /**日志模块模版 */\n    module: string;\n\n    /**日志操作模版 */\n    action: string;\n\n    /**日志日期模版 */\n    date: string;\n}\n\nconst DEF_LOGGER_STYLES: ILoggerStyles = {\n    \"gray\": \"color: gray;\"\n    , \"bule\": \"color: #03A9F4;\"\n    , \"bold\": \"font-weight: bold;\"\n    , \"lighter\": \"font-weight: lighter;\"\n    , \"orange\": \"color: #ff5722\"\n    , \"green\": \"color: #8bc34a\"\n    , \"violet\": \"color: #ff22ff\"\n};\n\n/**默认头部信息样式 */\nconst DEF_LOGGER_HEAD_INFO_STYLE: ILoggerHeadInfoTypes = {\n    \"app\": \"bule\"\n    , \"module\": [\"bold\", \"green\"]\n    , \"action\": [\"gray\", \"lighter\"]\n    , \"date\": [\"gray\", \"lighter\"]\n}\n\n/**头部信息排列顺序 */\nconst DEF_HEAD_SEQUENCE = [\"date\", \"app\", \"module\", \"action\"];\n\n/**默认头部信息类型模板 */\nconst DEF_HEAD_TYPE_TPLS: ILoggerHeadInfoTpls = {\n    \"app\": \"%c{app}\"\n    , \"module\": \"%c{module}\"\n    , \"action\": \"%c@[{action}]\"\n    , \"date\": \"%c{date}\"\n}\n\n/**日志 */\nclass Logger {\n\n    /**显示样式设置 */\n    private style: ILoggerStyles = copy(DEF_LOGGER_STYLES);\n\n    /**头部内容样式 */\n    private headStyles: ILoggerHeadInfoTypes = copy(DEF_LOGGER_HEAD_INFO_STYLE);\n\n    /**头部内容模版设置镀锡 */\n    private headTypeTpls = copy(DEF_HEAD_TYPE_TPLS);\n\n    /**固定的头部内容模版 */\n    private headTpl:string;\n\n    /**头部内容类型数组 */\n    private headTplTypes: string[] = [];\n\n    /**日志归属业务 */\n    private app:string = \"\";\n\n    /**日志归属模块 */\n    private module:string;\n\n    /**日志归属的行为 */\n    private action:string[] = [];\n\n    /**子模块 */\n    private subLogger = new Map<string, Logger>();\n\n    /**时间显示格式 */\n    private dateFormat: string = \"i:s.M\";\n\n    private enableDebug:boolean;\n\n    /**\n     * 日志\n     * @param type   日志归属模块\n     * @param config 日志模块配置\n     */\n    constructor(type?: string, config: Partial<ILoggerConfig> = {}) {\n        type = isString(type) ? type : \"\";\n        this.processConfig(type, config);\n    }\n\n    private processConfig(type:string, config: Partial<ILoggerConfig>) {\n        this.module = type;\n\n        const {\n            style\n            , app\n            , debug\n            , headSequence = copy(DEF_HEAD_SEQUENCE)\n            , showDate = true\n            , dateFormat\n        } = config;\n\n        if (isBoolean(debug)) {\n            this.enableDebug = debug;\n        } else if (globalThis?.process?.env?.NODE_ENV) {\n            this.enableDebug = process.env.NODE_ENV === \"development\";\n        } else {\n            this.enableDebug = false;\n        }\n\n        if (style) {\n            this.style = extend(this.style, style);\n        }\n\n        if (isString(app)) {\n            this.app = app;\n        } else if (isUndefined(app)) {\n            this.app = type;\n        }\n\n        if (isObject(config.tpls)) {\n            this.headTypeTpls = extend(\n                this.headTypeTpls\n                , config.tpls\n            );\n        }\n\n        const showHeadTypes = [];\n        if (this.app) {\n            showHeadTypes.push(\"app\");\n        }\n        if (showDate) {\n            showHeadTypes.push(\"date\");\n        }\n        if (this.module !== this.app) {\n            showHeadTypes.push(\"module\");\n        }\n\n        if (isString(dateFormat)) {\n            this.dateFormat = dateFormat;\n        }\n\n        // \"%c{date} %c{app} %c{module} %c@{action}\"\n        this.headTpl = showHeadTypes\n            .sort((now, next) => headSequence.indexOf(now) - headSequence.indexOf(next))\n            .reduce(\n                (tpl, type) => {\n                    this.headTplTypes.push(type);\n                    return `${tpl} ${this.headTypeTpls[type] || \"\"}`;\n                }\n                , \"\"\n            );\n    }\n\n    /**获取时间 */\n    private getTime() {\n        return date(new Date, this.dateFormat);\n    }\n\n    /**构建显示样式 */\n    private buildStyle(styles:string[]): Array<string> {\n        if (!isArray(styles) || styles.length === 0) {\n            return [];\n        }\n        return styles.map(type => {\n                        const style = this.headStyles[type];\n                        if (isString(style)) {\n                            return this.style[style] || style;\n                        }\n                        if (isArray(style)) {\n                            return style.map((mType: string) => this.style[mType] || mType).join(\"\");\n                        }\n                        return type;\n                    });\n    }\n\n    /**构建显示内容 */\n    private build(contents:any[], withStyle:boolean = true) {\n        var tpl = this.headTpl;\n        const headData = {\n            \"date\": this.getTime()\n            ,\"app\": this.app\n            , \"module\": this.module\n            , \"action\": \"\"\n        }\n        const headStyle = copy(this.headTplTypes);\n\n        if (this.action && this.action.length) {\n            headData.action = this.action.join(\" > \");\n            this.action = [];\n            tpl = `${tpl} ${this.headTypeTpls.action}`;\n            headStyle.push(\"action\");\n        }\n\n        if (!withStyle) {\n            // 不带样式的要把标识去掉\n            tpl = tpl.replace(/(%c)/g, \"\");\n        }\n\n        var result = [\n            labelReplace(tpl, headData)\n        ];\n        if (withStyle) {\n            result = result.concat(this.buildStyle(headStyle))\n        }\n        result = result.concat(contents);\n\n        return result;\n    }\n\n    /**\n     * 获取当前 Logger 的子 Logger\n     * @param type 子 Logger 名称\n     * @param config 子 Logger 配置\n     */\n    getLogger(type: string = \"global\", config?: Partial<ILoggerConfig>) {\n        if (this.subLogger.has(type)) {\n            return this.subLogger.get(type);\n        }\n        config = config || {};\n        config.app = this.module;\n        const typeLogger = new Logger(type, config);\n        this.subLogger.set(type, typeLogger);\n        return typeLogger;\n    }\n\n    /**\n     * 增加操作行为记录\n     * @param action 操作类型\n     * @example\n        ```ts\n        Logger.at(\"getData\").info(\"Done!\");\n        ```\n     */\n    at(action:string) {\n        if (isString(action)) {\n            this.action.push(action);\n        }\n        return this;\n    }\n    \n    /**\n     * 普通日志\n     * @param val 要打印的信息\n     * @example\n        ```ts\n        Logger.info(\"Hello\", { \"a\": 1});\n        ```\n     */\n    info(...val: unknown[]) {\n        if (isArray(val) && val.length) {\n            console.log.apply(\n                console\n                , this.build(val)\n            );\n        }\n    }\n\n    /**info 的别名 */\n    log(...val: unknown[]) {\n        this.info.apply(this, val);\n    }\n\n    /**警告日志 */\n    warn(...val: unknown[]) {\n        console.warn.apply(\n            console\n            , this.build(val, false)\n        );\n    }\n\n    /**错误日志 */\n    error(...val: unknown[]) {\n        console.error.apply(\n            console\n            , this.build(val, false)\n        );\n    }\n\n    /**显示当前执行的代码在堆栈中的调用路径 */\n    trace(...val: unknown[]) {\n        console.trace.apply(\n            console\n            , this.build(val)\n        );\n    }\n\n    /**\n     * 信息分组日志\n     * @param title 群组标题\n     * @param args  打印的内容\n     * @example\n    ```ts\n    // 默认是折叠方式\n    Logger.group(\"Group...\", {\"b\": 2});\n    // 展开 Group\n    PagesLoger.at(\"getData\").group(\n        {\n            \"text\": \"Group Done!\"\n            ,\"collapsed\": false\n        }\n        , \"anything...\"\n        , {\"e\": 4}\n    );\n    ```\n     */\n    group(title: IGroupTitleConfig, ...args: unknown[]):void\n    group(title: string, ...args: unknown[]):void\n    group(title, ...args) {\n        if (isString(title)) {\n            (title as IGroupTitleConfig) = {\n                \"text\": title\n                ,\"collapsed\": true\n            };\n        }\n\n        const { collapsed = true, text} = title;\n\n        console[\n            collapsed ? \"groupCollapsed\" : \"group\"\n        ].apply(\n            console\n            , this.build([text])\n        );\n\n        args.forEach(arg => {\n            if (isArray(arg) || isObject(arg)) {\n                console.dir(arg);\n            } else {\n                console.log(arg);\n            }\n        });\n\n        console.groupEnd();\n    }\n\n    /**输出一个表格 */\n    table(...args: unknown[]) {\n        if (!isArray(args) || !args.length) {\n            return;\n        }\n        const title = args.length > 1 && isString(args[0]) && args[0] || \"\";\n        console.group.apply(\n            console\n            , this.build([title])\n        );\n        console.table.apply(console, title ? args.slice(1) : args);\n        console.groupEnd();\n    }\n\n    /**\n     * 调试日志，只有当调试模式打开的时候才会输出\n     * @param val 要打印的信息\n     * @example\n        ```ts\n        Logger.debug(\"Hello\", { \"a\": 1});\n        ```\n     */\n    debug(...val: unknown[]) {\n        if (this.enableDebug) {\n            this.info.apply(this, val);\n        }\n    }\n}\n\nexport { Logger };\n\n/**\n * 获取一个全局性质的 Logger\n * @param type Logger 名称\n * @param config Logger 配置\n */\nfunction getLogger(type:string, config?:Partial<ILoggerConfig>) {\n    if (!isString(type)) {\n        throw(\n            new Error(\"需要指定 Logger 的类型\")\n        );\n    }\n    if (LoggerSubjects.has(type)) {\n        return LoggerSubjects.get(type);\n    }\n    const typeLogger = new Logger(type, config);\n    LoggerSubjects.set(type, typeLogger);\n    return typeLogger;\n}\n\nexport default getLogger;"],"names":[],"mappings":"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"}