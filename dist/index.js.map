{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { copy, extend, isString, date, isArray, labelReplace, isUndefined } from \"@x-drive/utils\";\n\n/**已存在的 Logger 实例 */\nconst LoggerSubjects = new Map<string, Logger>();\n\ninterface ILoggerStyles {\n    gray: string;\n    bule: string;\n    bold: string;\n    lighter: string;\n    orange: string;\n    green:string;\n    [name:string]: string;\n}\n\ninterface ILoggerConfig {\n    /**信息样式 */\n    style: ILoggerStyles;\n\n    /**业务类型 */\n    app:string;\n\n    /**头信息排列顺序 */\n    headSequence:string[];\n\n    /**是否显示时间 */\n    showDate:boolean;\n}\n\n/**Group 标题设置 */\ninterface IGroupTitleConfig {\n    /**Group 标题 */\n    text:string;\n\n    /**是否折叠 */\n    collapsed:true | false;\n}\n\n/**日志基础头信息样式 */\ntype ILoggerHeadInfoTypes = {\n    /**日志业务样式 */\n    app: string | string[];\n\n    /**日志模块样式 */\n    module: string | string[];\n\n    /**日志操作样式 */\n    action: string | string[];\n\n    /**日志日期样式 */\n    date: string | string[];\n}\n\ntype ILoggerHeadInfoTpls = {\n    /**日志业务模版 */\n    app: string;\n\n    /**日志模块模版 */\n    module: string;\n\n    /**日志操作模版 */\n    action: string;\n\n    /**日志日期模版 */\n    date: string;\n}\n\nconst DEF_LOGGER_STYLES: ILoggerStyles = {\n    \"gray\": \"color: gray;\"\n    , \"bule\": \"color: #03A9F4;\"\n    , \"bold\": \"font-weight: bold;\"\n    , \"lighter\": \"font-weight: lighter;\"\n    , \"orange\": \"color: #ff5722\"\n    , \"green\": \"color: #8bc34a\"\n};\n\n/**默认头部信息样式 */\nconst DEF_LOGGER_HEAD_INFO_STYLE: ILoggerHeadInfoTypes = {\n    \"app\": \"bule\"\n    , \"module\": [\"bold\", \"green\"]\n    , \"action\": [\"gray\", \"lighter\"]\n    , \"date\": [\"gray\", \"lighter\"]\n}\n\n/**头部信息排列顺序 */\nconst DEF_HEAD_SEQUENCE = [\"date\", \"app\", \"module\", \"action\"];\n\n/**默认头部信息类型模板 */\nconst DEF_HEAD_TYPE_TPLS: ILoggerHeadInfoTpls = {\n    \"app\": \"%c{app}\"\n    , \"module\": \"%c{module}\"\n    , \"action\": \"%c@[{action}]\"\n    , \"date\": \"%c{date}\"\n}\n\n/**日志 */\nclass Logger {\n\n    /**显示样式设置 */\n    private style: ILoggerStyles = copy(DEF_LOGGER_STYLES);\n\n    /**头部内容样式 */\n    private headStyles: ILoggerHeadInfoTypes = copy(DEF_LOGGER_HEAD_INFO_STYLE);\n\n    /**头部内容模版设置镀锡 */\n    private headTypeTpls = copy(DEF_HEAD_TYPE_TPLS);\n\n    /**固定的头部内容模版 */\n    private headTpl:string;\n\n    /**头部内容类型数组 */\n    private headTplTypes: string[] = [];\n\n    /**日志归属业务 */\n    private app:string = \"\";\n\n    /**日志归属模块 */\n    private module:string;\n\n    /**日志归属的行为 */\n    private action:string[] = [];\n\n    /**子模块 */\n    private subLogger = new Map<string, Logger>();\n\n    /**\n     * 日志\n     * @param type   日志归属模块\n     * @param config 日志模块配置\n     */\n    constructor(type?: string, config: Partial<ILoggerConfig> = {}) {\n        type = isString(type) ? type : \"\";\n        this.module = type;\n\n        if (config.style) {\n            this.style = extend(this.style, config.style)\n        }\n\n        const {\n            headSequence = copy(DEF_HEAD_SEQUENCE)\n            , app\n            , showDate = true\n        } = config;\n\n        if (isString(app)) {\n            this.app = app;\n        } else if (isUndefined(app)) {\n            this.app = type;\n        }\n\n        const showHeadTypes = [];\n        if (this.app) {\n            showHeadTypes.push(\"app\");\n        }\n        if (showDate) {\n            showHeadTypes.push(\"date\");\n        }\n        if (this.module !== this.app) {\n            showHeadTypes.push(\"module\");\n        }\n\n        // \"%c{date} %c{app} %c{module} %c@{action}\"\n        this.headTpl = showHeadTypes\n                        .sort((now, next) => headSequence.indexOf(now) - headSequence.indexOf(next))\n                        .reduce(\n                            (tpl, type) => {\n                                this.headTplTypes.push(type);\n                                return `${tpl} ${this.headTypeTpls[type] || \"\"}`;\n                            }\n                            , \"\"\n                        );\n    }\n\n    /**获取时间 */\n    private getTime() {\n        return date(new Date, \"H:i:s.M\");\n    }\n\n    /**构建显示样式 */\n    private buildStyle(styles:string[]): Array<string> {\n        if (!isArray(styles) || styles.length === 0) {\n            return [];\n        }\n        return styles.map(type => {\n                        const style = this.headStyles[type];\n                        if (isString(style)) {\n                            return this.style[style] || style;\n                        }\n                        if (isArray(style)) {\n                            return style.map((mType: string) => this.style[mType] || mType).join(\"\");\n                        }\n                        return type;\n                    });\n    }\n\n    /**构建显示内容 */\n    private build(contents:any[]) {\n        var tpl = this.headTpl;\n        const headData = {\n            \"date\": this.getTime()\n            ,\"app\": this.app\n            , \"module\": this.module\n            , \"action\": \"\"\n        }\n        const headStyle = copy(this.headTplTypes);\n\n        if (this.action && this.action.length) {\n            headData.action = this.action.join(\" > \");\n            this.action = [];\n            tpl = `${tpl} ${this.headTypeTpls.action}`;\n            headStyle.push(\"action\");\n        }\n\n        return [\n            `${labelReplace(tpl, headData)}`\n            , ...this.buildStyle(headStyle)\n            , ...contents\n        ];\n    }\n\n    /**\n     * 获取当前 Logger 的子 Logger\n     * @param type 子 Logger 名称\n     * @param config 子 Logger 配置\n     */\n    getLogger(type: string = \"global\", config?: Partial<ILoggerConfig>) {\n        if (this.subLogger.has(type)) {\n            return this.subLogger.get(type);\n        }\n        config = config || {};\n        config.app = this.module;\n        const typeLogger = new Logger(type, config);\n        this.subLogger.set(type, typeLogger);\n        return typeLogger;\n    }\n\n    /**\n     * 增加操作行为记录\n     * @param action 操作类型\n     * @example\n        ```ts\n        Logger.at(\"getData\").info(\"Done!\");\n        ```\n     */\n    at(action:string) {\n        if (isString(action)) {\n            this.action.push(action);\n        }\n        return this;\n    }\n    \n    /**\n     * 普通日志\n     * @param val 要打印的信息\n     * @example\n        ```ts\n        Logger.info(\"Hello\", { \"a\": 1});\n        ```\n     */\n    info(...val: any[]) {\n        if (isArray(val) && val.length) {\n            console.log.apply(\n                console\n                , this.build(val)\n            );\n        }\n    }\n\n    /**警告日志 */\n    warn(...val: any[]) {\n        console.warn.apply(\n            console\n            , val\n        );\n    }\n\n    /**错误日志 */\n    error(...val: any[]) {\n        console.error.apply(\n            console\n            , val\n        );\n    }\n\n    /**\n     * 群组日志\n     * @param title 群组标题\n     * @param args  打印的内容\n     * @example\n    ```ts\n    // 默认是折叠方式\n    Logger.group(\"Group...\", {\"b\": 2});\n    // 展开 Group\n    PagesLoger.at(\"getData\").group(\n        {\n            \"text\": \"Group Done!\"\n            ,\"collapsed\": false\n        }\n        , \"anything...\"\n        , {\"e\": 4}\n    );\n    ```\n     */\n    group(title: IGroupTitleConfig, ...args:Array<any>):void\n    group(title: string, ...args: Array<any>):void\n    group(title, ...args) {\n        if (isString(title)) {\n            (title as IGroupTitleConfig) = {\n                \"text\": title\n                ,\"collapsed\": true\n            };\n        }\n\n        const { collapsed = true, text} = title;\n\n        console[\n            collapsed ? \"groupCollapsed\" : \"group\"\n        ].apply(\n            console\n            , this.build([text])\n        );\n\n        args.forEach(arg => {\n            if (isString(arg)) {\n                console.log(arg)\n            } else {\n                console.dir(arg)\n            }\n        });\n\n        console.groupEnd();\n    }\n}\n\nexport { Logger };\n\nfunction getLogger(type:string, config?:Partial<ILoggerConfig>) {\n    if (!isString(type)) {\n        throw(\n            new Error(\"需要指定 Logger 的类型\")\n        );\n    }\n    if (LoggerSubjects.has(type)) {\n        return LoggerSubjects.get(type);\n    }\n    const typeLogger = new Logger(type, config);\n    LoggerSubjects.set(type, typeLogger);\n    return typeLogger;\n}\n\nexport default getLogger;"],"names":["const","copy","isString","extend","isUndefined","this","date","isArray","labelReplace"],"mappings":"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"}